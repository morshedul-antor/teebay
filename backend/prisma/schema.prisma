// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ********************** Models *****************************
model User {
  @@map("users")

  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  firstName String @map("first_name")
  lastName String @map("last_name")
  email String @unique
  phone String @unique
  address String
  password String

  products Product[] @relation("UserToProduct")
  providerOrders Order[] @relation("ProviderToOrder")
  recipientOrders Order[] @relation("RecipientToOrder")
}


model Category {
  @@map("categories")
  
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  name String @unique

  products Product[] @relation("CategoryToProduct")
}


model Product {
  @@map("products")

  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  title String
  description String
  price Float
  rentPrice Float? @map("(rent_price)")
  rentDay String? @map("(rent_day)")
  userId Int @map("user_id") 
  categoryIds Int[] @map("category_ids")

  user User @relation("UserToProduct", fields: [userId], references: [id])
  categories Category[] @relation("CategoryToProduct")
  orders Order[] @relation("ProductToOrder")
}


model Order {
  @@map("orders")

  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  orderType String @map("order_type")
  totalAmount Float @map("total_amount")
  periodStart DateTime? @map("(period_start)")
  periodEnd DateTime? @map("(period_end)")
  remarks String? 
  providerId Int @map("provider_id") 
  recipientId Int @map("recipient_id")
  productId Int @map("product_id")

  provider User @relation("ProviderToOrder", fields: [providerId], references: [id])
  recipient User @relation("RecipientToOrder", fields: [recipientId], references: [id])
  product Product @relation("ProductToOrder" , fields: [productId], references: [id])
}